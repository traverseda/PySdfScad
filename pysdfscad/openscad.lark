?start: value*

?value: NAME "=" sum ";"    -> assign_var
      | function_def
      | module_def
      | comment
      | object
      | operator

?sum: product
    | sum "+" product   -> add
    | sum "-" product   -> sub

?product: atom
    | product "*" atom  -> mul
    | product "/" atom  -> div

?atom: NUMBER           -> number
     | "-" atom         -> neg
     | NAME             -> var
     | "(" sum ")"

operator: NAME "(" combined_args ")" _block

operator_def: "module" name "(" args_definition ")" _block

_block: object
    | "{" value* "}" ";"?

object: function ";"
function: NAME  WS? "(" combined_args ")" -> function_call
function_def: "function" NAME "(" args_definition ")" "=" sum ";"-> function_def

// Defines an operator
module_def: "module" NAME "(" args_definition ")" _block -> module_def

combined_args: args ("," kwargs)*
    | kwargs?

//Like combined args but args are names
args_definition: arg_def_name* ("," kwargs)*
    | kwargs?
arg_def_name:(name ("," name)*)

args: _argvalue ("," _argvalue)*
kwargs: kwargvalue ("," kwargvalue)*
kwargvalue: NAME WS? "=" WS? _argvalue
_argvalue: ESCAPED_STRING | sum | function | vector

vector: "[" args? "]" -> vector


comment: C_COMMENT | CPP_COMMENT 
name: NAME

%import common.CNAME -> NAME
%import common.C_COMMENT
%import common.CPP_COMMENT
%import common.NUMBER
%import common.ESCAPED_STRING
%import common.WS_INLINE
%import common.WS
%import common.NEWLINE

%ignore WS
%ignore NEWLINE
